{
	// Place your snippets for powershell here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	//  "prefix": "log",
	//  "body": [
	//   "console.log('$1');",
	//   "$2"
	//  ],
	//  "description": "Log output to console"
	// }
   
	"Total customobject loop": {
		"prefix": "Total",
		"body": [
		"$$total = Foreach ($$variable in $$collection) {",
		"\t[pscustomobject]@{",
		"\t\t Name = $$variable.Name",
		"\t}",
		"}",
		"$$total | Export-CSV -Path c:\\temp\\total.csv -NoTypeInformation -Encoding UTF8 -Delimiter ';'"
		],
	"description": "Create a $total loop with a customobject inside"
	}

	"Total customobject loop2": {
		"prefix": "Total2",
		"body": [
		"$$total2 = Foreach ($$variable in $$collection) {",
		"\t[pscustomobject]@{",
		"\t\t Name = $$variable.Name",
		"\t}",
		"}",
		"$$total2 | Export-CSV -Path c:\\temp\\total.csv -NoTypeInformation -Encoding UTF8 -Delimiter ';'"
		],
	"description": "Create a $total2 loop with a customobject inside"
	}

	"Exchange Online Connection": {
		"prefix": "ex-ExchangeOnlineConnection",
		"body": [
			"#Set Execution Policy",
		"Set-ExecutionPolicy RemoteSigned -Scope Process",
		"#Define credential",
		"\\$UserCredential = Get-Credential",
		"# Create the session",
		"\\$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential \\$UserCredential -Authentication Basic -AllowRedirection",
		"Import-PSSession \\$Session -DisableNameChecking"
		],
		"description": "Connect to Exchange Online"
	}

	"HtML header": {
		"prefix": "ex-AddHTMLheader",
		"body": [
			"#HTML file and styles",
		"\\$htmlHeader = @\"",
		"<!doctype html\">",
		"<html lang=\"e\">",
		"<head>",
		"<meta charset=\"UTF-8\">",
		"<title>${1:Title}</title>",
		"<style type=\"text/css\">",
		"body {",
		"}",
		"</style>",
		"</head>",
		"\"@"
		],
		"description": "Add HTML header section"
	}
	
	"ex-Send-MailMessage": {
		"prefix": "ex-Send-MailMessage",
		"body": [
			"$$Params = @{",
			"    'SmtpServer'  = 'smtp.mycompany.com'",
			"    'Port'        = 25",
			"    'Priority'    = 'Normal'",
			"    'From'        = 'sender@mycompany.com'",
			"    'To'          = 'mainrecipient@mycompany.com'",
			"    'Cc'          = 'copyrecipient@mycompany.com'",
			"    'Bcc'         = 'hiddenrecipient@mycompany.com'",
			"    'Subject'     = 'Mail title'",
			"    'Body'        = 'This is the content of my mail'",
			"    'BodyAsHtml'  = $$false",
			"    'Attachments' = 'c:\\MyFile.txt'",
			"}",
			"Send-MailMessage @Params"
		],
		"description": "Send a mail message"
	}

	"Comment": {
		"prefix": "Comment",
		"body": [	
				"<# Block Cooment",
				"",				
				"#", 
			   "#>"
				],
		"description": "Comment"
	}

	"Parameter-Credential": {
		"prefix": "parameter-credential",
		"body": [
			"# Specifies the user account credentials to use when performing this task.\r",
			"[Parameter()]\r",
			"[ValidateNotNull()]\r",
			"[System.Management.Automation.PSCredential]\r",
			"[System.Management.Automation.Credential()]\r",
			"$$Credential${1: = [System.Management.Automation.PSCredential]::Empty}"
		],
		"description": "Parameter declaration snippet for a Credential parameter."
	}
	
	"Exchange Online Connection": {
		"prefix": "ex-ExchangeOnlineConnection",
		"body": [
			"#Set Execution Policy",
		"Set-ExecutionPolicy RemoteSigned -Scope Process",
		"#Define credential",
		"\\$UserCredential = Get-Credential",
		"# Create the session",
		"\\$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential \\$UserCredential -Authentication Basic -AllowRedirection",
		"Import-PSSession \\$Session -DisableNameChecking"
		],
		"description": "Connect to Exchange Online"
	}
	
	"DateTimeWriteVerbose": {
		"prefix": "dtwv",
		"body": [
			"Write-Verbose \"[$(Get-Date -format G)] ${1:message}\"$0"
		],
		"description": "Pre-pend datetime for Write-Verbose"
	}	
	

}